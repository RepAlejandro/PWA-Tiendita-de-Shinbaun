@page "/userRegister"
@using TiendaS.Client.Services
@inject IUsersService UserService
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center ">

	<div class="card p-4">

		<div class="d-flex flex-column align-items-center ">
			<img src="images/Logo.jpg" class="mb-3" style="width: 80px; height: auto;" />
			<h3>Crear Cuenta</h3>
			<p> Accede a todo lo que la Tiendita de Sheinbaun ofrece con una única cuenta.</p>
		</div>

		<EditForm Model="@newUser" OnValidSubmit="InsertUsuario">
			<DataAnnotationsValidator />
			<ValidationSummary class="text-danger" />

			@if (!isInserted && showError)
			{
				<div class="alert alert-danger" role="alert">
					El registro ha fallado. Por favor, inténtelo de nuevo.
				</div>
			}

			<div class="mb-3">
				<label for="username" class="form-label">Usuario: </label>
				<InputText id="username" class="form-control" @bind-Value="newUser.username" />
			</div>

			<div class="mb-3">
				<label for="email" class="form-label">Correo electrónico: </label>
				<InputText id="email" class="form-control" @bind-Value="newUser.email" />
			</div>

			<div class="mb-3">
				<label for="password" class="form-label">Contraseña: </label>
				<InputText id="password" class="form-control" @bind-Value="newUser.passwordHash" />
			</div>

			<div class="d-flex flex-column gap-2">
				<input type="submit" class="buttonAppPrimary " value="Registrar" />
				<p>Ya tienes una cuenta? <a href="/userLogin">Iniciar sesión</a></p>
			</div>

		</EditForm>
	</div>



</div>

@code {

	private Users newUser = new Users();
	private bool isInserted = false;
	private bool showError = false;

	protected async Task InsertUsuario()
	{
		try
		{
			await UserService.SaveUser(newUser);
			Navigation.NavigateTo("/userLogin?registro=exitoso");
			isInserted = true;
		}
		catch(Exception ex)
		{
			Console.WriteLine($"Error al guardar usuario: {ex.Message}");
			isInserted = false;
			showError = true;  
		}

	}
}